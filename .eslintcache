[{"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/index.tsx":"1","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/index.ts":"2","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/home/PageHome.tsx":"3","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/misc/error/ErrorPostEffect.js":"4","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/user/UserReducer.ts":"5","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/home/IndividualService.tsx":"6","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/misc/common/CommonAction.ts":"7","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/buttons/ButtonFormSubmit.js":"8","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/service/requests/GetFilteredServicesRequests.ts":"9","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/forms/common/FormInputText.tsx":"10","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/utils/HttpUtility.ts":"11","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/constants/ApiEndpoints.ts":"12","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/App.tsx":"13","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/forms/common/FormInputRadio.tsx":"14","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/common-components/loader/LoadingIndicator.tsx":"15","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/user/UserSelector.ts":"16","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/constants/GeneralConstants.ts":"17","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/common-components/navigation/Topbar.tsx":"18","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/modals/ModalAuthentication.tsx":"19","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/user/request-models/SignUpRequest.ts":"20","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/service/FormCreateService.tsx":"21","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/PageServiceProvider.tsx":"22","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/misc/error/ErrorReducer.js":"23","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/common-components/notification/ModalMessage.tsx":"24","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/PageGeneralUser.tsx":"25","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/order/OrdersTable.tsx":"26","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/utils/BaseRequest.ts":"27","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/order/OrderSelector.ts":"28","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/order/ModalReviewOrder.tsx":"29","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/order/FormGiveOrderReview.tsx":"30","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/service/TableService.tsx":"31","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/order/OrderPostEffect.js":"32","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/order/PageOrderManagement.tsx":"33","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/common-components/notification/ToastMessage.tsx":"34","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/i18n.ts":"35","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/user/request-models/SignInRequest.ts":"36","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/forms/common/FormInputTextArea.tsx":"37","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/forms/FormSignUp.tsx":"38","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/forms/FormSignIn.tsx":"39","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/home/FormFilterService.tsx":"40"},{"size":481,"mtime":1623433425787,"results":"41","hashOfConfig":"42"},{"size":1717,"mtime":1623432974022,"results":"43","hashOfConfig":"42"},{"size":1291,"mtime":1623433093611,"results":"44","hashOfConfig":"42"},{"size":468,"mtime":1613752095633,"results":"45","hashOfConfig":"42"},{"size":1025,"mtime":1623428138013,"results":"46","hashOfConfig":"42"},{"size":798,"mtime":1623419831380,"results":"47","hashOfConfig":"42"},{"size":1263,"mtime":1612182286618,"results":"48","hashOfConfig":"42"},{"size":403,"mtime":1612193988133,"results":"49","hashOfConfig":"42"},{"size":602,"mtime":1623433096978,"results":"50","hashOfConfig":"42"},{"size":1267,"mtime":1612085989238,"results":"51","hashOfConfig":"42"},{"size":4158,"mtime":1613752093102,"results":"52","hashOfConfig":"42"},{"size":856,"mtime":1623425475515,"results":"53","hashOfConfig":"42"},{"size":1516,"mtime":1623431800559,"results":"54","hashOfConfig":"42"},{"size":2556,"mtime":1623510852299,"results":"55","hashOfConfig":"42"},{"size":750,"mtime":1623439438736,"results":"56","hashOfConfig":"42"},{"size":273,"mtime":1623426558497,"results":"57","hashOfConfig":"42"},{"size":721,"mtime":1623426968141,"results":"58","hashOfConfig":"42"},{"size":1790,"mtime":1623510390083,"results":"59","hashOfConfig":"42"},{"size":2685,"mtime":1623512341932,"results":"60","hashOfConfig":"42"},{"size":588,"mtime":1623410928222,"results":"61","hashOfConfig":"42"},{"size":3109,"mtime":1623510878071,"results":"62","hashOfConfig":"42"},{"size":959,"mtime":1623433589315,"results":"63","hashOfConfig":"42"},{"size":1096,"mtime":1612183997756,"results":"64","hashOfConfig":"42"},{"size":963,"mtime":1623432657703,"results":"65","hashOfConfig":"42"},{"size":407,"mtime":1623426854242,"results":"66","hashOfConfig":"42"},{"size":5412,"mtime":1623442482405,"results":"67","hashOfConfig":"42"},{"size":388,"mtime":1612115026475,"results":"68","hashOfConfig":"42"},{"size":565,"mtime":1623434055176,"results":"69","hashOfConfig":"42"},{"size":1072,"mtime":1623441589686,"results":"70","hashOfConfig":"42"},{"size":2247,"mtime":1623441798417,"results":"71","hashOfConfig":"42"},{"size":1964,"mtime":1623441969724,"results":"72","hashOfConfig":"42"},{"size":921,"mtime":1623442028228,"results":"73","hashOfConfig":"42"},{"size":274,"mtime":1623442267819,"results":"74","hashOfConfig":"42"},{"size":610,"mtime":1612183053531,"results":"75","hashOfConfig":"42"},{"size":619,"mtime":1612082227731,"results":"76","hashOfConfig":"42"},{"size":316,"mtime":1613752095638,"results":"77","hashOfConfig":"42"},{"size":1235,"mtime":1623441538206,"results":"78","hashOfConfig":"42"},{"size":2383,"mtime":1623511304306,"results":"79","hashOfConfig":"42"},{"size":2104,"mtime":1623511318512,"results":"80","hashOfConfig":"42"},{"size":2818,"mtime":1623510859570,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"inxv6u",{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/index.tsx",[],["173","174"],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/index.ts",["175","176","177"],"import errorReducer from './misc/error/ErrorReducer';\nimport requestingReducer from './misc/requesting/RequestingReducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport userMiddleware from './user/UserPostEffect';\nimport userReducer from './user/UserReducer';\nimport finishedReducer from './misc/finished/FinishedReducer';\nimport commonReducer from './misc/common/CommonReducer';\nimport errorPostEffect from './misc/error/ErrorPostEffect';\nimport serviceReducer from './service/ServiceReducer';\nimport serviceMiddleware from './service/ServicePostEffect';\nimport orderReducer from './order/OrderReducer';\nimport orderMiddleware from './order/OrderPostEffect';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistPartial } from 'redux-persist/es/persistReducer';\n\nconst rootReducer = {\n    service: serviceReducer,\n    order: orderReducer,\n    user: userReducer,\n    error: errorReducer,\n    requesting: requestingReducer,\n    finished: finishedReducer,\n    common: commonReducer,\n};\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            // Ignore these action types\n            ignoredActions: ['*'],\n            // Ignore these field paths in all actions\n            ignoredActionPaths: ['meta.arg', 'payload.timestamp'],\n            // Ignore these paths in the state\n            ignoredPaths: [''],\n        },\n    }),\n    errorPostEffect,\n    userMiddleware,\n    serviceMiddleware,\n    orderMiddleware,\n];\n\nconst rootStore = configureStore({\n    reducer: rootReducer,\n\n    middleware,\n});\n\nexport type RootState = ReturnType<typeof rootStore.getState>;\n\nexport default rootStore;\n","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/home/PageHome.tsx",["178"],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/misc/error/ErrorPostEffect.js",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/user/UserReducer.ts",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/home/IndividualService.tsx",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/misc/common/CommonAction.ts",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/buttons/ButtonFormSubmit.js",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/service/requests/GetFilteredServicesRequests.ts",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/forms/common/FormInputText.tsx",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/utils/HttpUtility.ts",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/constants/ApiEndpoints.ts",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/App.tsx",["179"],"import React, { FC, Suspense } from 'react';\nimport './App.css';\nimport '../i18n';\nimport { LoadingIndicator } from './common-components/loader/LoadingIndicator';\nimport { ModalAuthentication } from './modals/ModalAuthentication';\nimport { Topbar } from './common-components/navigation/Topbar';\nimport { ModalMessage } from './common-components/notification/ModalMessage';\nimport { ToastMessage } from './common-components/notification/ToastMessage';\nimport { useSelector } from 'react-redux';\nimport { selectLoggedInUserType } from '../store/user/UserSelector';\nimport { UserType } from '../constants/GeneralConstants';\nimport { PageGeneralUser } from './pages/PageGeneralUser';\nimport { PageServiceProvider } from './pages/PageServiceProvider';\nimport { PageHome } from './pages/home/PageHome';\nimport { Switch } from 'react-router-dom';\n\nconst App: FC = () => {\n    const userType = useSelector(selectLoggedInUserType);\n    return (\n        <div className=\"App\">\n            <Suspense fallback={<LoadingIndicator />}>\n                <Topbar />\n                <Switch>\n                    {userType === UserType.GENERAL_USER && <PageGeneralUser />}\n                    {userType === UserType.UNAUTHENTICATED && <PageHome />}\n                    {userType === UserType.SERVICE_PROVIDER && <PageServiceProvider />}\n                </Switch>\n                <LoadingIndicator />\n                <ModalMessage />\n                <ToastMessage />\n            </Suspense>\n        </div>\n    );\n};\n\nexport default App;\n",["180","181"],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/forms/common/FormInputRadio.tsx",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/common-components/loader/LoadingIndicator.tsx",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/user/UserSelector.ts",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/constants/GeneralConstants.ts",[],["182","183"],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/common-components/navigation/Topbar.tsx",["184","185"],"import { FC } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserAction } from '../../../store/user/UserAction';\nimport { selectLoggedInUserInfo, selectLoggedInUserType } from '../../../store/user/UserSelector';\nimport { UserType } from '../../../constants/GeneralConstants';\nimport { ModalAuthentication } from '../../modals/ModalAuthentication';\nimport styled from 'styled-components';\nimport logo from './logo.jpg';\n\nexport const Topbar: FC = () => {\n    const dispatch = useDispatch();\n\n    const userInfo: any = useSelector(selectLoggedInUserInfo);\n    const userType = useSelector(selectLoggedInUserType);\n\n    return (\n        <TopbarContainer>\n            <img src={logo} style={{ height: '70px' }} />\n            <TopbarTitle> Service Maniac</TopbarTitle>\n            {/*{userInfo && <h2>Logged In as {userInfo?.data?.name}</h2>}*/}\n            {userType === UserType.UNAUTHENTICATED ? (\n                <ModalAuthentication />\n            ) : (\n                <Button danger onClick={() => dispatch(UserAction.signOut())}>\n                    {' '}\n                    Sign Out\n                </Button>\n            )}\n        </TopbarContainer>\n    );\n};\n\nconst TopbarTitle = styled.h1`\n    display: flex;\n    height: 60px;\n    width: auto;\n    font-weight: bold;\n    align-items: center;\n    color: #383d3a;\n    color: #d3e3d9;\n    margin-left: 10px;\n    margin-top: 5px;\n    text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n`;\n\nconst TopbarContainer = styled.div`\n    height: 80px;\n    margin-bottom: 20px;\n    text-align: start;\n    display: grid;\n    padding: 5px;\n    grid-template-columns: auto 1fr auto;\n\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 3px 10px 0 rgba(0, 0, 0, 0.19);\n`;\n","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/modals/ModalAuthentication.tsx",["186","187","188","189"],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/user/request-models/SignUpRequest.ts",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/service/FormCreateService.tsx",["190","191","192","193","194"],"import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormBasicContainer } from '../../common-components/layout/FormStyles';\nimport { FormInputText } from '../../forms/common/FormInputText';\nimport ButtonFormSubmit from '../../buttons/ButtonFormSubmit';\nimport { useTranslation } from 'react-i18next';\nimport useFormInputValidation from '../../forms/common/useFormInputValidation';\nimport * as Yup from 'yup';\nimport { selectRequesting } from '../../../store/misc/requesting/RequestingSelector';\nimport { UserAction } from '../../../store/user/UserAction';\nimport FormValidationConstants from '../../forms/common/FormValidationConstants';\nimport { SignInInputs, SignInRequest } from '../../../store/user/request-models/SignInRequest';\nimport { AnyObjectSchema } from 'yup';\nimport { selectFinished } from '../../../store/misc/finished/FinishedSelector';\nimport { FormInputRadio, RadioTypes } from '../../forms/common/FormInputRadio';\nimport { ServiceAction } from '../../../store/service/ServiceAction';\nimport { CreateServiceRequest, ServiceInputs } from '../../../store/service/requests/CreateServiceRequest';\nimport { ServiceType } from '../../../constants/GeneralConstants';\n\nconst INITIAL_STATE: ServiceInputs = {\n    name: '',\n    description: '',\n    hourlyRate: '',\n    preferredHour: '',\n    type: ServiceType.OTHERS,\n};\n\nconst VALIDATION_SCHEMA: AnyObjectSchema = Yup.object({\n    name: FormValidationConstants.REQUIRED_AND_STRING_ONLY,\n    description: FormValidationConstants.REQUIRED_AND_STRING_ONLY,\n    hourlyRate: FormValidationConstants.REQUIRED_AND_DIGIT_ONLY,\n    preferredHour: FormValidationConstants.REQUIRED_AND_STRING_ONLY,\n    type: FormValidationConstants.REQUIRED_AND_STRING_ONLY,\n});\n\nexport const FormCreateService: FC = () => {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n\n    const { control, values } = useFormInputValidation(INITIAL_STATE, VALIDATION_SCHEMA);\n    const isRequesting = useSelector((state) => selectRequesting(state, [ServiceAction.CREATE_SERVICE]));\n    const isFinished = useSelector((state) => selectFinished(state, [ServiceAction.CREATE_SERVICE]));\n\n    useEffect(() => {\n        if (isFinished) control.resetData();\n    }, [isFinished]);\n\n    const onSubmit = () => {\n        console.log(values);\n        dispatch(ServiceAction.createService(new CreateServiceRequest(values)));\n    };\n\n    return (\n        <FormBasicContainer>\n            <FormInputText label={'Name'} control={control} name={'name'} />\n            <FormInputText label={'Description'} control={control} name={'description'} />\n            <FormInputText label={'Hourly Rate '} control={control} name={'hourlyRate'} />\n            <FormInputText label={'Preferred Hours '} control={control} name={'preferredHour'} />\n            <FormInputRadio control={control} label={'Service Type'} name={'type'} type={RadioTypes.SERVICE_TYPE} />\n\n            <ButtonFormSubmit title={'Create New Service'} isRequesting={isRequesting} control={control} onSubmit={onSubmit} />\n        </FormBasicContainer>\n    );\n};\n","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/PageServiceProvider.tsx",["195"],"import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { PageServiceManagement } from './service/PageServiceManagement';\nimport { PageOrderManagement } from './order/PageOrderManagement';\nimport { Tabs } from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nconst { TabPane } = Tabs;\nexport const PageServiceProvider = () => {\n    const history = useHistory();\n    const onChangeTab = (key) => {\n        history.push(key);\n    };\n    return (\n        <div>\n            <Tabs defaultActiveKey=\"1\" onChange={onChangeTab}>\n                <TabPane tab=\"Services\" key=\"/services\" />\n                <TabPane tab=\"Orders\" key=\"/orders\" />\n            </Tabs>\n            <div style={{ margin: '20px' }}>\n                <Route exact={true} path={'/services'} component={PageServiceManagement} />\n                <Route exact={true} path={'/orders'} component={PageOrderManagement} />\n            </div>\n        </div>\n    );\n};\n","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/misc/error/ErrorReducer.js",["196"],"\nimport { createAction, createReducer } from '@reduxjs/toolkit'\nconst initialState = {}\nconst resetAction = createAction('reset-tracked-loading-state')\n\nfunction isPendingAction(action) {\n    return action.type.endsWith('/pending')\n}\n\nconst errorReducer = createReducer(initialState, (builder) => {\n    builder\n        .addCase(resetAction, () => initialState)\n        .addMatcher(isPendingAction, (state, action) => {\n            const requestName = action.type.replace('/pending', '')\n            state[requestName] = true\n        })\n        .addMatcher(\n            (action) => action.type.endsWith('/rejected'),\n            (state, action) => {\n                const requestName = action.type.replace('/rejected', '')\n                //state[requestName] = action.payload.message\n            }\n        )\n        .addMatcher(\n            (action) => action.type.endsWith('/fulfilled'),\n            (state, action) => {\n                const requestName = action.type.replace('/fulfilled', '')\n                state[requestName] = false\n            }\n        )\n})\n\n\nexport default errorReducer;","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/common-components/notification/ModalMessage.tsx",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/PageGeneralUser.tsx",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/order/OrdersTable.tsx",["197"],"import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Modal, Table } from 'antd';\nimport { selectLoggedInUserType } from '../../../store/user/UserSelector';\nimport { selectFinished } from '../../../store/misc/finished/FinishedSelector';\nimport { OrderAction } from '../../../store/order/OrderAction';\nimport { GetOrdersRequest } from '../../../store/order/requests/GetOrdersRequest';\nimport { selectOrders } from '../../../store/order/OrderSelector';\nimport { OrderStatus } from '../../../constants/GeneralConstants';\nimport { ChangeOrderStatusRequest } from '../../../store/order/requests/ChangeOrderStatusRequest';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ModalReviewOrder } from './ModalReviewOrder';\n\nconst { confirm } = Modal;\n\nexport const OrdersTable: FC = () => {\n    const tableData = useSelector(selectOrders);\n    const userType = useSelector(selectLoggedInUserType);\n    const dispatch = useDispatch();\n\n    const isFinishedUpdate = useSelector((state) => selectFinished(state, [OrderAction.CHANGE_ORDER_STATUS]));\n    const isFinishedReview = useSelector((state) => selectFinished(state, [OrderAction.GIVE_REVIEW]));\n\n    useEffect(() => {\n        dispatch(OrderAction.getOrders(new GetOrdersRequest(userType)));\n    }, [isFinishedUpdate, isFinishedReview]);\n\n    const changeOrderStatus = (orderId, newStatus: OrderStatus) => {\n        let confirmText = '';\n        let content = '';\n        if (newStatus === OrderStatus.ACCEPTED) {\n            confirmText = 'Are you sure to accept this order?';\n            content = 'After you accept this order the next step will be done by the user';\n        } else if (newStatus === OrderStatus.REJECTED) {\n            confirmText = 'Are you sure to reject this order?';\n            content = \"After you reject this order you can't change it's status anymore\";\n        } else if (newStatus === OrderStatus.RUNNING) {\n            confirmText = 'Are you sure to start this order?';\n            content = \"Once you start only the service provider can change it's status\";\n        } else if (newStatus === OrderStatus.COMPLETED) {\n            confirmText = 'Are you sure to complete this order?';\n            content = 'After you complete the order the user needs to verify this';\n        } else if (newStatus === OrderStatus.FINISHED) {\n            confirmText = 'Are you happy with this order?';\n            content = 'If you are happy then provide a review';\n        } else if (newStatus === OrderStatus.UNFINISHED) {\n            confirmText = 'Is something wrong with the order?';\n            content = 'If something went wrong then give a review';\n        }\n        confirm({\n            title: confirmText,\n            icon: <ExclamationCircleOutlined />,\n            content,\n            okText: 'Yes',\n            cancelText: 'No',\n            onOk: () => dispatch(OrderAction.changeOrderStatus(new ChangeOrderStatusRequest(orderId, newStatus))),\n        });\n    };\n\n    const columns = [\n        {\n            title: 'Order ID',\n            dataIndex: 'orderId',\n        },\n        {\n            title: 'Service Name',\n            dataIndex: 'serviceName',\n        },\n        {\n            title: 'Ordered By',\n            dataIndex: 'orderFrom',\n        },\n        {\n            title: 'Service Provider',\n            dataIndex: 'orderTo',\n        },\n        {\n            title: 'Order Date',\n            dataIndex: 'orderDate',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n        },\n        {\n            title: 'Review',\n            dataIndex: 'review',\n        },\n        {\n            title: 'Rating',\n            dataIndex: 'rating',\n        },\n        {\n            title: '',\n        },\n        {\n            title: 'Accept',\n            render: (text: string, record) => <Button onClick={() => changeOrderStatus(record.orderId, OrderStatus.ACCEPTED)}> Accept </Button>,\n        },\n        {\n            title: 'Reject',\n            render: (text: string, record) => <Button onClick={() => changeOrderStatus(record.orderId, OrderStatus.REJECTED)}> Reject </Button>,\n        },\n        {\n            title: 'Action',\n            render: (text: string, record) => <Button onClick={() => changeOrderStatus(record.orderId, OrderStatus.RUNNING)}> Start Order </Button>,\n        },\n        {\n            title: 'Action',\n            render: (text: string, record) => (\n                <Button onClick={() => changeOrderStatus(record.orderId, OrderStatus.RUNNING)}> Complete Order </Button>\n            ),\n        },\n        {\n            title: 'Action',\n            render: (text: string, record) => (\n                <Button onClick={() => changeOrderStatus(record.orderId, OrderStatus.FINISHED)}> Verify Service </Button>\n            ),\n        },\n        {\n            title: 'Action',\n            render: (text: string, record) => (\n                <Button onClick={() => changeOrderStatus(record.orderId, OrderStatus.UNFINISHED)}> Reject Service </Button>\n            ),\n        },\n        {\n            title: 'Action',\n            render: (text: string, record) => <ModalReviewOrder orderId={record.orderId} />,\n        },\n    ];\n\n    return (\n        <div style={{ margin: '20px' }}>\n            <h3> Order Table</h3>\n            <Table dataSource={tableData} columns={columns} />\n        </div>\n    );\n};\n","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/utils/BaseRequest.ts",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/order/OrderSelector.ts",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/order/ModalReviewOrder.tsx",["198"],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/order/FormGiveOrderReview.tsx",["199"],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/service/TableService.tsx",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/order/OrderPostEffect.js",["200"],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/order/PageOrderManagement.tsx",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/common-components/notification/ToastMessage.tsx",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/i18n.ts",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/store/user/request-models/SignInRequest.ts",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/forms/common/FormInputTextArea.tsx",[],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/forms/FormSignUp.tsx",["201","202"],"/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/forms/FormSignIn.tsx",["203","204"],"import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormBasicContainer } from '../common-components/layout/FormStyles';\nimport { FormInputText } from './common/FormInputText';\nimport ButtonFormSubmit from '../buttons/ButtonFormSubmit';\nimport { useTranslation } from 'react-i18next';\nimport useFormInputValidation from './common/useFormInputValidation';\nimport * as Yup from 'yup';\nimport { selectRequesting } from '../../store/misc/requesting/RequestingSelector';\nimport { UserAction } from '../../store/user/UserAction';\nimport FormValidationConstants from './common/FormValidationConstants';\nimport { SignInInputs, SignInRequest } from '../../store/user/request-models/SignInRequest';\nimport { AnyObjectSchema } from 'yup';\nimport { selectFinished } from '../../store/misc/finished/FinishedSelector';\nimport { Form } from 'antd';\n\nconst INITIAL_STATE: SignInInputs = {\n    email: '',\n    password: '',\n};\n\nconst VALIDATION_SCHEMA: AnyObjectSchema = Yup.object({\n    email: FormValidationConstants.VALID_EMAIL,\n    password: Yup.string().min(6, 'Minimum 6 Characters'),\n});\n\nexport const FormSignIn: FC = () => {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n\n    const { control, values } = useFormInputValidation(INITIAL_STATE, VALIDATION_SCHEMA);\n    const isRequesting = useSelector((state) => selectRequesting(state, [UserAction.SIGN_IN]));\n    const isFinished = useSelector((state) => selectFinished(state, [UserAction.SIGN_IN]));\n\n    useEffect(() => {\n        if (isFinished) control.resetData();\n    }, [isFinished]);\n\n    const onSubmit = () => dispatch(UserAction.signIn(new SignInRequest(values)));\n\n    return (\n        <Form layout={'vertical'}>\n            <FormInputText label={t('form_input_label.email')} control={control} name={'email'} />\n            <FormInputText label={t('form_input_label.password')} control={control} name={'password'} />\n            <ButtonFormSubmit title={t('sign_in_title')} isRequesting={isRequesting} control={control} onSubmit={onSubmit} />\n        </Form>\n    );\n};\n","/Users/faisal/Documents/Development/toptal-assignment/toptal-assignment-frontend/src/views/pages/home/FormFilterService.tsx",["205","206","207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":13,"column":10,"nodeType":"214","messageId":"215","endLine":13,"endColumn":24},{"ruleId":"212","severity":1,"message":"216","line":14,"column":8,"nodeType":"214","messageId":"215","endLine":14,"endColumn":15},{"ruleId":"212","severity":1,"message":"217","line":15,"column":10,"nodeType":"214","messageId":"215","endLine":15,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":15,"column":8,"nodeType":"220","endLine":15,"endColumn":10,"suggestions":"221"},{"ruleId":"212","severity":1,"message":"222","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":29},{"ruleId":"208","replacedBy":"223"},{"ruleId":"210","replacedBy":"224"},{"ruleId":"208","replacedBy":"225"},{"ruleId":"210","replacedBy":"226"},{"ruleId":"212","severity":1,"message":"227","line":14,"column":11,"nodeType":"214","messageId":"215","endLine":14,"endColumn":24},{"ruleId":"228","severity":1,"message":"229","line":19,"column":13,"nodeType":"230","endLine":19,"endColumn":58},{"ruleId":"212","severity":1,"message":"231","line":2,"column":25,"nodeType":"214","messageId":"215","endLine":2,"endColumn":30},{"ruleId":"212","severity":1,"message":"232","line":13,"column":13,"nodeType":"214","messageId":"215","endLine":13,"endColumn":14},{"ruleId":"212","severity":1,"message":"233","line":17,"column":11,"nodeType":"214","messageId":"215","endLine":17,"endColumn":26},{"ruleId":"228","severity":1,"message":"229","line":38,"column":21,"nodeType":"230","endLine":38,"endColumn":111},{"ruleId":"212","severity":1,"message":"234","line":10,"column":10,"nodeType":"214","messageId":"215","endLine":10,"endColumn":20},{"ruleId":"212","severity":1,"message":"235","line":12,"column":10,"nodeType":"214","messageId":"215","endLine":12,"endColumn":22},{"ruleId":"212","severity":1,"message":"236","line":12,"column":24,"nodeType":"214","messageId":"215","endLine":12,"endColumn":37},{"ruleId":"212","severity":1,"message":"232","line":38,"column":13,"nodeType":"214","messageId":"215","endLine":38,"endColumn":14},{"ruleId":"218","severity":1,"message":"237","line":46,"column":8,"nodeType":"220","endLine":46,"endColumn":20,"suggestions":"238"},{"ruleId":"212","severity":1,"message":"239","line":2,"column":17,"nodeType":"214","messageId":"215","endLine":2,"endColumn":23},{"ruleId":"240","severity":1,"message":"241","line":20,"column":23,"nodeType":"214","messageId":"215","endLine":20,"endColumn":34},{"ruleId":"218","severity":1,"message":"242","line":26,"column":8,"nodeType":"220","endLine":26,"endColumn":44,"suggestions":"243"},{"ruleId":"212","severity":1,"message":"244","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":21},{"ruleId":"218","severity":1,"message":"237","line":33,"column":8,"nodeType":"220","endLine":33,"endColumn":20,"suggestions":"245"},{"ruleId":"240","severity":1,"message":"246","line":6,"column":13,"nodeType":"214","messageId":"215","endLine":6,"endColumn":21},{"ruleId":"212","severity":1,"message":"247","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":28},{"ruleId":"212","severity":1,"message":"248","line":3,"column":30,"nodeType":"214","messageId":"215","endLine":3,"endColumn":47},{"ruleId":"212","severity":1,"message":"247","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":28},{"ruleId":"218","severity":1,"message":"237","line":37,"column":8,"nodeType":"220","endLine":37,"endColumn":20,"suggestions":"249"},{"ruleId":"212","severity":1,"message":"250","line":4,"column":10,"nodeType":"214","messageId":"215","endLine":4,"endColumn":23},{"ruleId":"212","severity":1,"message":"251","line":6,"column":10,"nodeType":"214","messageId":"215","endLine":6,"endColumn":24},{"ruleId":"218","severity":1,"message":"237","line":38,"column":8,"nodeType":"220","endLine":38,"endColumn":20,"suggestions":"252"},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"@typescript-eslint/no-unused-vars","'persistReducer' is defined but never used.","Identifier","unusedVar","'storage' is defined but never used.","'PersistPartial' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["255"],"'ModalAuthentication' is defined but never used.",["253"],["254"],["253"],["254"],"'userInfo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Radio' is defined but never used.","'t' is assigned a value but never used.","'changePageState' is assigned a value but never used.","'UserAction' is defined but never used.","'SignInInputs' is defined but never used.","'SignInRequest' is defined but never used.","React Hook useEffect has a missing dependency: 'control'. Either include it or remove the dependency array.",["256"],"'Switch' is defined but never used.","no-unused-vars","'requestName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userType'. Either include them or remove the dependency array.",["257"],"'useDispatch' is defined but never used.",["258"],"'getState' is assigned a value but never used.","'FormBasicContainer' is defined but never used.","'FormItemContainer' is defined but never used.",["259"],"'FormInputText' is defined but never used.","'useTranslation' is defined but never used.",["260"],"no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"263","fix":"267"},{"desc":"263","fix":"268"},{"desc":"263","fix":"269"},"Update the dependencies array to be: [dispatch]",{"range":"270","text":"271"},"Update the dependencies array to be: [control, isFinished]",{"range":"272","text":"273"},"Update the dependencies array to be: [isFinishedUpdate, isFinishedReview, dispatch, userType]",{"range":"274","text":"275"},{"range":"276","text":"273"},{"range":"277","text":"273"},{"range":"278","text":"273"},[738,740],"[dispatch]",[2261,2273],"[control, isFinished]",[1329,1365],"[isFinishedUpdate, isFinishedReview, dispatch, userType]",[1466,1478],[1600,1612],[1855,1867]]